{"version":3,"sources":["App.styles.js","components/Heading/Header.styles.js","components/Heading/Header.js","style/theme.js","style/globalStyle.js","components/DataProvider/actions.js","components/DataProvider/countriesReducer.js","components/DataProvider/store.js","components/DataProvider/DataProvider.js","components/MainSection/MainSection.styles.js","components/MainSection/Country.styles.js","components/MainSection/Country.js","components/MainSection/MainSection.js","components/SearchBar/SearchBar.styles.js","components/SearchBar/SearchBar.js","components/CountryInfo/CountryInfo.styles.js","components/CountryInfo/CountryInfo.js","App.js","index.js"],"names":["Wrapper","styled","div","StyledHeader","header","theme","darkmode","colors","darkBlue","white","Button","button","lightModeBlue","Heading","h1","Header","switchMode","onClick","className","veryDarkBlue","darkGray","lightGray","GlobalStyle","createGlobalStyle","REQUEST_DATA","GET_DATA","GET_DATA_FAILED","FILTER_DATA","SEARCH_COUNTRIES","SHOW_ALL","getAllData","dispatch","type","setTimeout","fetch","then","response","ok","json","data","getData","catch","error","getDataFailed","initialState","isLoading","isError","countries","filtered","searched","store","createStore","state","action","filteredCountries","filter","country","region","toLowerCase","item","name","includes","phrase","composeWithDevTools","applyMiddleware","thunk","DataProvider","children","main","Countries","section","Link","Info","Country","flag","population","capital","to","src","alt","MainSection","useDispatch","useSelector","length","map","useEffect","SearchWrapper","Form","form","Options","Container","SearchBar","useState","active","setActive","value","setValue","chooseRegion","e","target","filterData","onSubmit","preventDefault","onChange","placeholder","InfoWrapper","Back","FlagWrapper","Details","DetailsWrapper","Borders","StyledLink","CountryInfo","useParams","find","countryName","nativeName","subRegion","subregion","topLevelDomain","currencies","languages","borders","borderCountries","i","alpha3Code","push","getBorderCountries","code","join","App","mode","setMode","path","exact","render","style","color","textAlign","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e65bdbbd.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 1600px;\r\n    margin: 0 auto;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader  = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 20px 50px;\r\n    background-color: ${({theme, darkmode}) => darkmode ?  theme.colors.darkBlue : theme.colors.white};\r\n\r\n    @media(max-width: 450px) {\r\n        padding: 20px 25px;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 5px 10px;\r\n    color: ${({theme, darkmode}) => darkmode ? theme.colors.white : theme.colors.lightModeBlue};\r\n    border-style: none;\r\n    background-color: transparent;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n\r\n    @media(max-width: 450px) {\r\n        padding: 0;\r\n    }\r\n    \r\n    i{\r\n        padding-right: 10px;\r\n        transform: rotate(-20deg);\r\n    }\r\n`;\r\n\r\nexport const Heading = styled.h1`\r\n    color: ${({theme, darkmode}) => darkmode ? theme.colors.white : theme.colors.lightModeBlue};\r\n    font-size: 20px;\r\n    font-weight: 800;\r\n\r\n    @media(max-width: 450px) {\r\n        font-size: 18px;\r\n    }\r\n`;","import React from 'react';\r\nimport { StyledHeader, Button, Heading } from './Header.styles';\r\n\r\nconst Header = ({darkmode, switchMode}) => {\r\n    return ( \r\n        <StyledHeader darkmode={darkmode}>\r\n            <Heading darkmode={darkmode}>Where in the world?</Heading>\r\n            <Button darkmode={darkmode} onClick={switchMode}><i className={`${darkmode ? 'fas' : 'far'} fa-moon`}></i>Dark Mode</Button>\r\n        </StyledHeader>\r\n     );\r\n}\r\n \r\nexport default Header;","export const theme = {\r\n    colors: {\r\n        darkBlue : 'hsl(209, 23%, 22%)',\r\n        veryDarkBlue : 'hsl(207, 26%, 17%)',\r\n        lightModeBlue: 'hsl(200, 15%, 8%)',\r\n        darkGray: 'hsl(0, 0%, 52%)',\r\n        lightGray: 'hsl(0, 0%, 98%)',\r\n        white: 'hsl(0, 0%, 100%)',\r\n    },\r\n}","import {createGlobalStyle} from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *, *::after, *::before {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-family: 'Nunito Sans', sans-serif;\r\n        background-color: ${({theme, darkmode}) => darkmode ? theme.colors.veryDarkBlue : theme.colors.lightGray};\r\n    }\r\n\r\n    a, button {\r\n        font-family: 'Nunito Sans', sans-serif;\r\n    }\r\n`;\r\n","export const REQUEST_DATA = 'REQUEST_DATA';\r\nexport const GET_DATA = 'GET_DATA';\r\nexport const GET_DATA_FAILED = 'GET_DATA_FAILED';\r\nexport const FILTER_DATA = 'FILTER_DATA';\r\nexport const SEARCH_COUNTRIES = 'SEARCH_COUNTRIES';\r\nexport const SHOW_ALL = 'SHOW_ALL';\r\n\r\nexport const requestData = () => ({\r\n    type: REQUEST_DATA\r\n});\r\nexport const getData = (data) => ({\r\n    type: GET_DATA, data\r\n});\r\n\r\nexport const getDataFailed = (error) => ({\r\n    type: GET_DATA_FAILED,\r\n    error\r\n});\r\n\r\nexport const filterData = (region) => ({\r\n    type: FILTER_DATA,\r\n    region\r\n});\r\n\r\nexport const searchCountries = (phrase) => ({\r\n    type: SEARCH_COUNTRIES,\r\n    phrase: phrase.toLowerCase()\r\n});\r\n\r\nexport const showAll = () => ({\r\n    type: SHOW_ALL,\r\n});\r\n\r\nconst url = 'https://restcountries.eu/rest/v2/all';\r\n\r\nexport const getAllData = () => {\r\n    return dispatch => {\r\n        dispatch(requestData());\r\n\r\n        setTimeout(() => {\r\n            fetch(url)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json()}} )\r\n            .then(data => dispatch(getData(data)))\r\n            .catch(error => dispatch(getDataFailed(error)))\r\n            // .catch(error => console.log(error))\r\n        }, 1000);\r\n    }\r\n};","import { REQUEST_DATA, GET_DATA, GET_DATA_FAILED, FILTER_DATA, SEARCH_COUNTRIES, SHOW_ALL } from \"./actions\";\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    isError: false,\r\n    error: '',\r\n    countries: [],\r\n    filtered: [],\r\n    searched: [],\r\n}\r\n\r\nexport const countriesReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case REQUEST_DATA:\r\n            return {...state, isLoading: true};\r\n        case GET_DATA:\r\n            return {...state, isLoading: false, countries: action.data}\r\n        case GET_DATA_FAILED:\r\n            return {...state, isLoading: false, isError: true, error:action.error}\r\n        case FILTER_DATA:\r\n            let filteredCountries = [...state.countries];\r\n            filteredCountries = filteredCountries.filter(country => country.region.toLowerCase() === action.region.toLowerCase());\r\n            return {...state, filtered: filteredCountries, searched: []}\r\n        case SEARCH_COUNTRIES: \r\n            let searched  = [...state.countries];\r\n            searched = searched.filter(item => item.name.toLowerCase().includes(action.phrase));\r\n            return {...state, filtered: [], searched}\r\n        case SHOW_ALL:\r\n            return {...state, filtered: [], searched: []}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\";\r\nimport { countriesReducer } from \"./countriesReducer\";\r\n\r\nconst store = createStore(countriesReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nconst DataProvider = ({children}) => {\r\n    return ( \r\n        <Provider store={store}>\r\n            {children}\r\n        </Provider>\r\n     );\r\n}\r\n \r\nexport default DataProvider;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.main`\r\n    padding: 25px 50px;\r\n    background-color: ${({theme, darkmode}) => darkmode ? theme.colors.veryDarkBlue : theme.colors.lightGray};\r\n\r\n    @media(max-width: 850px) {\r\n        padding: 20px 40px;\r\n    }\r\n    @media(max-width: 650px) {\r\n        padding: 20px 30px;\r\n    }\r\n\r\n    @media(max-width: 450px) {\r\n        padding: 15px 25px;\r\n    }\r\n`;\r\n\r\nexport const Countries = styled.section`\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 20%);\r\n    justify-content: space-between;\r\n    row-gap: 50px;\r\n\r\n    @media(max-width: 850px) {\r\n        display: block;\r\n        width: 80%;\r\n        margin: 50px auto;\r\n    }\r\n    @media(max-width: 650px) {\r\n        width: 90%;\r\n    }\r\n\r\n    @media(max-width: 450px) {\r\n        width: 95%;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Wrapper = styled(Link)`\r\n    display: block;\r\n    background-color: ${({theme, darkmode}) => darkmode ==='true' ? theme.colors.darkBlue : theme.colors.white};\r\n    border-radius: 5px;\r\n    text-decoration: none;\r\n\r\n    @media(max-width: 850px) {\r\n        margin-bottom: 50px;\r\n    }\r\n        \r\n    & img {\r\n        border-radius: 5px 5px 0 0;\r\n        width: 100%;\r\n\r\n        @media(max-width: 850px) {\r\n            max-height: 400px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Info = styled.div`\r\n    padding: 15px;\r\n    color: ${({theme, darkmode}) => darkmode ? theme.colors.white : theme.colors.lightModeBlue};\r\n\r\n    @media(max-width: 850px) {\r\n        padding: 25px;\r\n    }\r\n\r\n    & h2 {\r\n        font-size: 16px;\r\n        font-weight: 800;\r\n        margin-bottom: 10px;\r\n\r\n        @media(max-width: 850px) {\r\n            font-size: 20px;\r\n        }\r\n        @media(max-width: 400px) {\r\n            font-size: 18px;\r\n        }\r\n    }\r\n    & p {\r\n        font-size: 12px;\r\n        font-weight: 300;\r\n        margin: 3px  0;\r\n\r\n        @media(max-width: 850px) {\r\n            font-size: 14px;\r\n            margin: 5px 0;\r\n        }\r\n\r\n        @media(max-width: 400px) {\r\n            font-size: 16px;\r\n        }\r\n\r\n        & span {\r\n            font-weight: 600;\r\n            font-size: 14px;\r\n\r\n            @media(max-width: 850px) {\r\n            font-size: 16px;\r\n            }\r\n            @media(max-width: 400px) {\r\n            font-size: 15px;\r\n            }\r\n\r\n        }\r\n    }\r\n`;","import React from 'react'\r\nimport { Wrapper, Info } from './Country.styles';\r\n\r\nconst Country = ({country, darkmode}) => {\r\n   \r\n    const {flag, name, population, region, capital} = country;\r\n\r\n    return ( \r\n        <Wrapper darkmode={`${darkmode}`} to={`/country/${name}`}>\r\n            <img src={flag} alt='country flag'></img>\r\n            <Info darkmode={darkmode}>\r\n                <h2>{name}</h2>\r\n                <p><span>Population:</span> {population}</p>\r\n                <p><span>Region:</span> {region}</p>\r\n                <p><span>Capital:</span> {capital}</p> \r\n            </Info>\r\n        </Wrapper>\r\n     );\r\n}\r\n \r\nexport default Country;","import React, {useEffect} from 'react';\r\nimport { Wrapper, Countries } from './MainSection.styles';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllData } from '../DataProvider/actions';\r\nimport Country from './Country';\r\n\r\n\r\nconst MainSection = ({darkmode}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const countries = useSelector(state => {\r\n        if(state.filtered.length) {\r\n            return state.filtered\r\n        } else if(state.searched.length) {\r\n            return state.searched\r\n        } else return state.countries\r\n    });\r\n\r\n    const data = countries.map(item => <Country darkmode={darkmode} key={item.name} country={item} />);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllData());\r\n    }, [dispatch]);\r\n\r\n\r\n    return (  \r\n        <Wrapper darkmode={darkmode}> \r\n            <Countries>\r\n                {data}\r\n            </Countries>\r\n        </Wrapper>\r\n    );\r\n}\r\n \r\nexport default MainSection;","import styled from \"styled-components\";\r\n\r\nexport const SearchWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: ${({theme, darkmode}) => darkmode ? theme.colors.veryDarkBlue : theme.colors.lightGray};\r\n    padding: 40px 50px 15px 50px;\r\n\r\n    @media(max-width: 850px) {\r\n        display: block;\r\n        padding: 40px 35px 15px 35px;\r\n    }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n    flex-basis: 30%;\r\n    background-color: ${({theme, darkmode}) => darkmode ? theme.colors.darkBlue : theme.colors.white};\r\n    border-radius: 5px;\r\n\r\n    @media(max-width: 850px){\r\n        height: 50px;\r\n        margin-bottom: 35px;\r\n    }\r\n\r\n    & button {\r\n        background-color: transparent;\r\n        color: ${({theme, darkmode}) => darkmode ? theme.colors.white : theme.colors.lightModeBlue};\r\n        border-style: none;\r\n        height: 100%;\r\n        width: 20%;\r\n        cursor: pointer;\r\n\r\n        @media(max-width: 850px) {\r\n            width: 15%;\r\n        }\r\n    }\r\n\r\n    & input {\r\n        height: 100%;\r\n        width: 80%;\r\n        background-color: transparent;\r\n        border-style: none;\r\n        color: ${({theme, darkmode}) => darkmode  ? theme.colors.white : theme.colors.lightModeBlue};\r\n\r\n        @media(max-width: 850px) {\r\n            width: 85%;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Options = styled.div`\r\n    position: relative;\r\n\r\n`;\r\n\r\nexport const Button = styled.button`\r\n        background-color: ${({theme, darkmode}) => darkmode ?  theme.colors.darkBlue : theme.colors.white};\r\n        border-radius: 5px;\r\n        border-style: none;\r\n        padding: 15px 20px;\r\n        color: ${({theme, darkmode}) => darkmode ? theme.colors.white : theme.colors.lightModeBlue};\r\n        cursor: pointer;\r\n\r\n        & i{\r\n            padding-left: 20px;\r\n            font-size: 10px;\r\n        }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    position: absolute;\r\n    top: calc(100% + 5px);\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: ${({theme, darkmode}) => darkmode ? theme.colors.darkBlue : theme.colors.white};\r\n    color: ${({theme, darkmode}) => darkmode ? theme.colors.white : theme.colors.lightModeBlue};\r\n    border-radius: 5px;\r\n    padding: 15px;\r\n\r\n    @media(max-width: 850px) {\r\n        width: 160px;\r\n    }\r\n\r\n    & button {\r\n        position: relative;\r\n        color: inherit;\r\n        background-color: transparent;\r\n        border-style: none;\r\n        text-align: left;\r\n        cursor: pointer;\r\n\r\n        &::after {\r\n            position: absolute;\r\n            z-index: 1;\r\n            content: '';\r\n            right: 20%;\r\n            top: 0;\r\n            height: 100%;\r\n            width: 2px;\r\n            background-color: ${({theme, darkmode}) => darkmode ? theme.colors.white : theme.colors.lightModeBlue};\r\n            opacity: 0;\r\n            transition: opacity .2s;\r\n        }\r\n\r\n        &:hover::after {\r\n            opacity: 1;\r\n        }\r\n    }\r\n    & button:not(:last-child) {\r\n        margin-bottom: 5px;\r\n    }\r\n`;","import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterData, searchCountries, showAll } from '../DataProvider/actions';\r\nimport { SearchWrapper, Options, Container, Button, Form } from './SearchBar.styles';\r\n\r\nconst SearchBar = ({darkmode}) => {\r\n    const [active, setActive] = useState(false);\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const chooseRegion = (e) => {\r\n        const region = e.target.name;\r\n        dispatch(filterData(region));\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(value) {\r\n            dispatch(searchCountries(value));\r\n        } else {\r\n            dispatch(showAll());\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <SearchWrapper darkmode={darkmode}>\r\n            <Form onSubmit={handleSubmit} darkmode={darkmode}>\r\n                <button type='submit'><i className=\"fas fa-search\"></i></button>\r\n                <input value={value} onChange={(e) => setValue(e.target.value) } type=\"text\" placeholder='Search for a country...'/>\r\n            </Form>\r\n            <Options darkmode={darkmode}>\r\n                <Button onClick={() => setActive(!active)} darkmode={darkmode}>Filter by region <i className={`fas fa-chevron-${active ? 'up' : 'down'}`}></i></Button>\r\n                {active ? <Container darkmode={darkmode}>\r\n                    <button onClick={chooseRegion} name='Africa'>Africa</button>\r\n                    <button onClick={chooseRegion} name='Americas'>America</button>\r\n                    <button onClick={chooseRegion} name='Asia'>Asia</button>\r\n                    <button onClick={chooseRegion} name='Europe'>Europe</button>\r\n                    <button onClick={chooseRegion} name='Oceania'>Oceania</button>\r\n                </Container> : null}\r\n            </Options>\r\n        </SearchWrapper>\r\n     );\r\n}\r\n \r\nexport default SearchBar;","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const InfoWrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 50px 50px 0;\r\n    min-height: 300px;\r\n    padding-top: 100px;\r\n\r\n    @media(max-width: 850px) {\r\n        display: block;\r\n        min-height: 80vh;\r\n        margin: 50px 70px 0;\r\n    }\r\n\r\n    @media(max-width: 650px) {\r\n        margin: 50px 50px 0;\r\n    }\r\n    \r\n    @media(max-width: 450px) {\r\n        margin: 50px 30px 0;\r\n    }\r\n`;\r\n\r\nexport const Back = styled(Link)`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: ${({theme, darkmode}) => darkmode === 'true' ?  theme.colors.darkBlue : theme.colors.white};\r\n    color: ${({theme, darkmode}) => darkmode === 'true' ? theme.colors.white : theme.colors.lightModeBlue};\r\n    text-decoration: none;\r\n    padding: 10px 30px;\r\n    border-radius: 5px;\r\n    box-shadow: 0 0 2px black;\r\n\r\n    i{\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n\r\nexport const FlagWrapper = styled.div`\r\n    flex-basis: 45%;\r\n    background-color: ${({theme, darkmode}) => darkmode ? theme.colors.darkBlue : theme.colors.white};\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n\r\n    @media(max-width: 1050px) {\r\n        flex-basis: 50%;\r\n    }\r\n    @media(max-width: 850px) {\r\n        flex-basis: 55%;\r\n    }\r\n\r\n    & img {\r\n        width: 100%;\r\n        min-height: 100%;\r\n    }\r\n`;\r\n\r\nexport const Details = styled.div`\r\n    flex-basis: 45%;\r\n    margin-top: 25px;\r\n    color: ${({theme, darkmode}) => darkmode ? theme.colors.white : theme.colors.lightModeBlue};\r\n\r\n    @media(max-width: 950px) {\r\n        flex-basis: 40%;\r\n        font-size: 12px;\r\n    }\r\n\r\n    & h3 {\r\n        font-size: 20px;\r\n        margin-bottom: 20px;\r\n\r\n        @media(max-width: 850px) {\r\n            font-size: 22px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DetailsWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    height: 50%;\r\n\r\n    & p {\r\n        flex-basis: 20%;\r\n        font-size: 13px;\r\n\r\n        @media(max-width: 950px) {\r\n        font-size: 12px;\r\n        }\r\n\r\n        @media(max-width: 850px) {\r\n            font-size: 15px;\r\n            margin-bottom: 5px;\r\n        }\r\n\r\n\r\n        & span {\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Borders = styled.div`\r\n    margin-top: 10px;\r\n    font-weight: 600;\r\n    font-size: 13px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    & h4 {\r\n        font-weight: 600;\r\n        padding: 5px 0;\r\n\r\n        @media(max-width: 850px) {\r\n            width: 100%;\r\n        }\r\n    }\r\n    & p {\r\n        margin-left: 5px;\r\n        padding: 5px 0;\r\n    }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n        margin: 0 5px 5px;\r\n        text-decoration: none;\r\n        color: ${({theme, darkmode}) => darkmode === 'true' ? theme.colors.white : theme.colors.lightModeBlue};\r\n        padding: 5px 10px;\r\n        background-color: ${({theme, darkmode}) => darkmode === 'true' ? theme.colors.darkBlue : theme.colors.white};\r\n        border-radius: 5px;\r\n        font-weight: 300;\r\n        box-shadow: 0 0 2px black;\r\n\r\n        @media(max-width: 850px) {\r\n            margin: 0 5px 5px 0;\r\n        }\r\n`;","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { InfoWrapper, Back, Details, FlagWrapper, DetailsWrapper, Borders, StyledLink } from './CountryInfo.styles';\r\n\r\nconst CountryInfo = ({darkmode}) => {\r\n\r\n    const {name} = useParams();\r\n\r\n    const country = useSelector(state => state.countries.find(country => country.name === name));\r\n\r\n    const countries = useSelector(state => state.countries);\r\n\r\n    const {name : countryName , population, nativeName, region, subRegion, subregion, capital, topLevelDomain, currencies, languages, flag, borders} = country;\r\n\r\n    const getBorderCountries = () => {\r\n        const borderCountries =[];\r\n        for(let i = 0; i < borders.length; i++) {\r\n            const country = countries.find(item => item.alpha3Code === borders[i]);\r\n            borderCountries.push(country.name);\r\n        }; \r\n        return borderCountries\r\n    }\r\n    \r\n    const borderCountries = getBorderCountries();\r\n\r\n    return ( \r\n        <InfoWrapper darkmode={darkmode}>\r\n            <Back darkmode={`${darkmode}`} to='/'><i className=\"fas fa-long-arrow-alt-left\"></i>Back</Back>\r\n            <FlagWrapper darkmode={darkmode}><img src={flag} alt=\"flag\" /></FlagWrapper>\r\n            <Details darkmode={darkmode}>\r\n                <h3>{countryName}</h3>\r\n                <DetailsWrapper>\r\n                    <p><span>Native Name: </span> {nativeName}</p>\r\n                    <p><span>Population: </span>{population}</p>\r\n                    <p><span>Region: </span>{region}</p>\r\n                    <p><span>Sub Region: </span>{subRegion || subregion }</p>\r\n                    <p><span>Capital: </span>{capital}</p>\r\n                    <p><span>Top Level Domain: </span>{topLevelDomain}</p>\r\n                    <p><span>Currencies: </span>{currencies.map(item => item.code)}</p>\r\n                    <p><span>Languages: </span>{languages.map(item => item.name).join(', ')}</p>\r\n                </DetailsWrapper>\r\n                <Borders>\r\n                     <h4>Border Countries: </h4>\r\n                     {borderCountries.length ? borderCountries.map(item => <StyledLink darkmode={`${darkmode}`} to={`/country/${item}`} key={item}>{item}</StyledLink>) : <p>There are not any border countries</p>}\r\n                </Borders>\r\n            </Details>\r\n        </InfoWrapper>\r\n     );\r\n}\r\n \r\nexport default CountryInfo;","import React, {useState} from 'react';\nimport {Wrapper} from './App.styles';\nimport Header from './components/Heading/Header';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './style/theme';\nimport { GlobalStyle } from './style/globalStyle';\nimport DataProvider from './components/DataProvider/DataProvider';\nimport MainSection from './components/MainSection/MainSection';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport CountryInfo from './components/CountryInfo/CountryInfo';\n\nconst App = () => {\n\n  const [mode, setMode] = useState(true);\n  const switchMode = () => setMode(!mode);\n\n  return ( \n    <DataProvider>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle darkmode={mode}/>\n        <Router>\n          <Wrapper>\n            <Header darkmode={mode} switchMode={switchMode} />\n              <Switch>\n                <Route path='/' exact>\n                  <SearchBar darkmode={mode}/>\n                  <MainSection darkmode={mode} />\n                </Route>\n                <Route path='/country/:name'>\n                  <CountryInfo darkmode={mode} />\n                </Route>\n                <Route render={() => <h1 style={{color: mode ? 'white' : 'black', textAlign: 'center'}}>This site doesn't exist</h1> }/>\n              </Switch>\n          </Wrapper>\n        </Router>\n      </ThemeProvider>\n    </DataProvider>\n   );\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}